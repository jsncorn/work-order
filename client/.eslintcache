[{"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\index.js":"1","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\App.jsx":"2","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\topBar\\topBar.jsx":"3","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\orderForm\\orderForm.jsx":"4","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Home\\home.jsx":"5","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\orderList\\orderList.jsx":"6","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\utils\\queries.js":"7","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Home\\Home.jsx":"8","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\singleOrder\\singleOrder.jsx":"9","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Signup\\Signup.jsx":"10","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\utils\\Auth.js":"11","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\utils\\mutations.js":"12","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Login\\Login.jsx":"13","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\Menu\\Menu.jsx":"14","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\orderList\\OrderList.jsx":"15"},{"size":433,"mtime":1646806627713,"results":"16","hashOfConfig":"17"},{"size":1495,"mtime":1647297349744,"results":"18","hashOfConfig":"17"},{"size":731,"mtime":1647278930129,"results":"19","hashOfConfig":"17"},{"size":9350,"mtime":1647296342058,"results":"20","hashOfConfig":"17"},{"size":813,"mtime":1646906632334,"results":"21","hashOfConfig":"17"},{"size":1958,"mtime":1647284059320,"results":"22","hashOfConfig":"17"},{"size":777,"mtime":1646906419214,"results":"23","hashOfConfig":"17"},{"size":725,"mtime":1647283924592,"results":"24","hashOfConfig":"17"},{"size":2266,"mtime":1646948775506,"results":"25","hashOfConfig":"17"},{"size":2536,"mtime":1647295965751,"results":"26","hashOfConfig":"17"},{"size":851,"mtime":1647289233322,"results":"27","hashOfConfig":"17"},{"size":1743,"mtime":1647284534565,"results":"28","hashOfConfig":"17"},{"size":2113,"mtime":1647295955899,"results":"29","hashOfConfig":"17"},{"size":1502,"mtime":1647293028819,"results":"30","hashOfConfig":"17"},{"size":2636,"mtime":1647297132153,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xp4ptd",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\index.js",[],["67","68"],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\App.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\topBar\\topBar.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\orderForm\\orderForm.jsx",["69"],"import React, { useState } from 'react';\r\nimport './orderForm.scss'\r\nimport { ADD_ORDER } from '../../utils/mutations';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../../utils/Auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Orderform(props) {\r\n\r\n    const [formState, setFormState] = useState({\r\n        carYear: '', carMake: '',\r\n        carModel: '', carColor: '', carPlate: '', carVin: '', customerName: '',\r\n        customerNum: '', customerSt: '', customerCity: '', customerState: '', customerZip: '',\r\n        workSum: '', workEst: ''\r\n    })\r\n    const [addOrder] = useMutation(ADD_ORDER);\r\n    const [formMsg, setFormMsg] = useState('');\r\n    const [color, setColor] = useState('');\r\n    const [afterSubmit, setAfterSubmit] = useState('hidden');\r\n    const [formVisibility, setFormVisibility] = useState('shown');\r\n\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        if (!Auth.loggedIn) {\r\n            console.log(\"User is not logged in\")\r\n        }\r\n        try {\r\n            e.preventDefault();\r\n            const mutationResponse = await addOrder({\r\n                variables: {\r\n                    carYear: formState.carYear,\r\n                    carMake: formState.carMake,\r\n                    carModel: formState.carModel,\r\n                    carColor: formState.carColor,\r\n                    carPlate: formState.carPlate,\r\n                    carVin: formState.carVin,\r\n                    custName: formState.customerName,\r\n                    custNumber: formState.customerNum,\r\n                    custSt: formState.customerSt,\r\n                    custCity: formState.customerCity,\r\n                    custState: formState.customerState,\r\n                    custZip: formState.customerZip,\r\n                    orderSum: formState.orderSum,\r\n                    orderEst: formState.orderEst\r\n                }\r\n\r\n                /*variables: {\r\n                    \"carYear\": \"2016\",\r\n                    \"carMake\":\"maserati\",\r\n                    \"carModel\":\"ghibli\",\r\n                    \"carColor\":\"black\",\r\n                    \"carPlate\":\"plate12\",\r\n                    \"carVin\":\"1G1PE5SB2E7134527\",\r\n                    \"custName\":\"jason three\",\r\n                    \"custNumber\":\"5101234567\",\r\n                    \"custSt\":\"123 Street St\",\r\n                    \"custCity\":\"City\",\r\n                    \"custState\":\"State\",\r\n                    \"custZip\": \"12345\",\r\n                    \"orderSum\":\"sumarry foaisdjusiaas\",\r\n                    \"orderEst\": \"123\"\r\n                }*/\r\n            });\r\n\r\n            setFormMsg('Info successfully sent');\r\n            setColor('green');\r\n            setAfterSubmit('');\r\n            setFormVisibility('hidden');\r\n        } catch (error) {\r\n            console.log(error);\r\n            setFormMsg('There was a validation error in one field, please look over it again.');\r\n            setColor('red');\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    if (!Auth.loggedIn()) {\r\n        return (\r\n            <div className=\"home\" style={ { display: 'flex', justifyContent: 'center', flexDirection: 'column' } }>\r\n                <h3 style={ { marginBottom: '0px' } }>Please log in to create a new form</h3>\r\n                <hr />\r\n                <button className='loginBtn'><Link className='link loginLink' to=\"/login\">Go to Login â†’</Link></button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='wrapper home'>\r\n\r\n            <h2 style={ { paddingTop: '30px',paddingBottom: '0px'} }>New Order</h2>\r\n            <form className={'flex-row justify-center justify-space-between-md align-center' + {formVisibility}} onSubmit={ handleFormSubmit }>\r\n                <div className='left'>\r\n\r\n                    <div className='carDiv'>\r\n                        <h3 style={ { width: '100%'} }>Car Information</h3>\r\n                        <div className='carLeft'>\r\n                            <div className='col-12'>\r\n                                <label>Year:\r\n                                    <input name=\"carYear\" id=\"carYear\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>Make:\r\n                                    <input name=\"carMake\" id='carMake' onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>Model:\r\n                                    <input name=\"carModel\" id=\"carModel\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='carRight'>\r\n                            <div className='col-12'>\r\n                                <label>Color:\r\n                                    <input name=\"carColor\" id=\"carColor\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>License Plate #:\r\n                                    <input name=\"carPlate\" id=\"carPlate\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>VIN #:\r\n                                    <input name=\"carVin\" id=\"carVin\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='customerDiv'>\r\n                        <h3 style={ { width: '100%' } }>Customer Information</h3>\r\n                        <div className='customerLeft'>\r\n                            <div className='col-12'>\r\n                                <label>Name:\r\n                                    <input name=\"customerName\" id=\"customerName\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>Number:\r\n                                    <input name=\"customerNum\" id=\"customerNum\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='customerRight'>\r\n                            <div className='col-12'>\r\n                                <label>Street:\r\n                                    <input name=\"customerSt\" id=\"customerSt\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>City:\r\n                                    <input name=\"customerCity\" id=\"customerCity\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>State:\r\n                                    <input name=\"customerState\" id=\"customerState\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <label>ZIP:\r\n                                    <input name=\"customerZip\" id=\"customerZip\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='workDiv'>\r\n                        <h3 style={ { width: '100%' } }>Work Order</h3>\r\n                        <div className='workLeft'>\r\n                            <div className='col-12'>\r\n                                <label>Summary:\r\n                                    <textarea name=\"orderSum\" id=\"orderSum\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='workRight'>\r\n                            <div className='col-12'>\r\n                                <label>Estimate:\r\n                                    <input name=\"orderEst\" id=\"orderEst\" onChange={ handleChange } />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='formSubmit'>\r\n                            <span className={color}>{ formMsg }</span>\r\n                            <span className={afterSubmit}>Click here to make another order.</span>\r\n                            <br/>\r\n                            <button type='submit'>Submit</button>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Home\\home.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\orderList\\orderList.jsx",["70","71"],"import { useMutation } from '@apollo/client';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './orderList.scss'\r\nimport { REMOVE_ORDER } from '../../utils/mutations';\r\n\r\nconst orderList = ({ orders, title }) => {\r\n    if (!orders.length) {\r\n        return <h3>No work orders</h3>;\r\n    }\r\n\r\nconst [ removeOrder ] = useMutation(REMOVE_ORDER);\r\n\r\nconst handleSubmit = async (e) => {\r\n    const mutationResponse = await removeOrder({\r\n        variables: {\r\n            _id: orders._id\r\n        }\r\n    })\r\n}\r\n\r\n    return (\r\n        <div style={{paddingBottom: \"20px\"}}>\r\n            <h2>{ title }</h2>\r\n            \r\n            { orders &&\r\n                orders.map((order) => (\r\n                    <div className='orderWrapper' key={ order._id }>\r\n                    <div className='orderDiv'>\r\n                        <h3 className='orderName'>{ order.custName }</h3>\r\n                        <br/>\r\n                        <div className='orderInfo'>\r\n                        <span className='carInfo'>{ order.carYear } </span> \r\n                        <span className='carInfo'>{ order.carMake } </span>\r\n                        <span className='carInfo'>{ order.carModel } </span>\r\n                        </div>\r\n                        <Link\r\n                        className='viewBtn'\r\n                            to={ `/orders/${order._id}` }\r\n                        >\r\n                            view\r\n                        </Link>\r\n                        <button\r\n                        className='delBtn'\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            delete\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                )) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default orderList;",["72","73"],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\utils\\queries.js",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Home\\Home.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\singleOrder\\singleOrder.jsx",["74"],"import React from \"react\";\r\nimport './singleOrder.scss';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport { QUERY_SINGLE_ORDER } from \"../../utils/queries\";\r\n\r\n\r\nconst SingleOrder = () => {\r\n    const { orderId } = useParams();\r\n    const { loading, data } = useQuery(QUERY_SINGLE_ORDER, {\r\n        variables: { orderId: orderId }\r\n    });\r\n\r\n    const order = data?.order || {};\r\n\r\n    if (loading) {\r\n        return <div> LOADING... </div>;\r\n    }\r\n\r\n    const ordermap = {\r\n        \"_id\": \"Order ID\",\r\n        \"carYear\": \"Year\",\r\n        \"carMake\": \"Make\",\r\n        \"carModel\": \"Model\",\r\n        \"carColor\": \"Color\",\r\n        \"carPlate\": \"License Plate\",\r\n        \"carVin\": \"VIN\",\r\n        \"custName\": \"Name\",\r\n        \"custNumber\": \"Phone Number\",\r\n        \"custSt\": \"Street\",\r\n        \"custCity\": \"City\",\r\n        \"custState\": \"State\",\r\n        \"custZip\": \"ZIP\",\r\n        \"orderSum\": \"Summary\",\r\n        \"orderEst\": \"Estimate\"\r\n    };\r\n\r\n    const CarTab = ({ data }) => {\r\n        return (\r\n            <table border=\"1\" >\r\n                <tbody>\r\n                    { Object.keys(data).map(key => {\r\n                        if (key !== \"__typename\") {\r\n                            return (\r\n                                <tr>\r\n                                    <td width=\"10%\">\r\n                                        <div className=\"carTable\">\r\n                                            <span>{ ordermap[key] }</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td width=\"20%\">\r\n                                        <div className=\"carTable\">\r\n                                            <span>{ data[key] }</span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    }) }\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"soMain\">\r\n            <div className=\"carSection\">\r\n                <CarTab data={ order } />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SingleOrder;","C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Signup\\Signup.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\utils\\Auth.js",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\utils\\mutations.js",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\pages\\Login\\Login.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\Menu\\Menu.jsx",[],"C:\\Users\\xcraf\\Desktop\\code\\work-order\\client\\src\\components\\orderList\\OrderList.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":29,"column":19,"nodeType":"81","messageId":"82","endLine":29,"endColumn":35},{"ruleId":"83","severity":2,"message":"84","line":12,"column":25,"nodeType":"81","endLine":12,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":15,"column":11,"nodeType":"81","messageId":"82","endLine":15,"endColumn":27},{"ruleId":"75","replacedBy":"85"},{"ruleId":"77","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":43,"column":49,"nodeType":"89","messageId":"90","endLine":43,"endColumn":51},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'mutationResponse' is assigned a value but never used.","Identifier","unusedVar","react-hooks/rules-of-hooks","React Hook \"useMutation\" is called in function \"orderList\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",["91"],["92"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]